// Code generated by MockGen. DO NOT EDIT.
// Source: handler/wallet_handler.go

// Package mock is a generated GoMock package.
package mock

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIWalletHandler is a mock of IWalletHandler interface.
type MockIWalletHandler struct {
	ctrl     *gomock.Controller
	recorder *MockIWalletHandlerMockRecorder
}

// MockIWalletHandlerMockRecorder is the mock recorder for MockIWalletHandler.
type MockIWalletHandlerMockRecorder struct {
	mock *MockIWalletHandler
}

// NewMockIWalletHandler creates a new mock instance.
func NewMockIWalletHandler(ctrl *gomock.Controller) *MockIWalletHandler {
	mock := &MockIWalletHandler{ctrl: ctrl}
	mock.recorder = &MockIWalletHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWalletHandler) EXPECT() *MockIWalletHandlerMockRecorder {
	return m.recorder
}

// HandleRequest mocks base method.
func (m *MockIWalletHandler) HandleRequest(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleRequest", w, r)
}

// HandleRequest indicates an expected call of HandleRequest.
func (mr *MockIWalletHandlerMockRecorder) HandleRequest(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleRequest", reflect.TypeOf((*MockIWalletHandler)(nil).HandleRequest), w, r)
}
