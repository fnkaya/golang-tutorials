// Code generated by MockGen. DO NOT EDIT.
// Source: service/wallet_service.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	model "wallet-service/model"

	gomock "github.com/golang/mock/gomock"
)

// MockIWalletService is a mock of IWalletService interface.
type MockIWalletService struct {
	ctrl     *gomock.Controller
	recorder *MockIWalletServiceMockRecorder
}

// MockIWalletServiceMockRecorder is the mock recorder for MockIWalletService.
type MockIWalletServiceMockRecorder struct {
	mock *MockIWalletService
}

// NewMockIWalletService creates a new mock instance.
func NewMockIWalletService(ctrl *gomock.Controller) *MockIWalletService {
	mock := &MockIWalletService{ctrl: ctrl}
	mock.recorder = &MockIWalletServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWalletService) EXPECT() *MockIWalletServiceMockRecorder {
	return m.recorder
}

// ChangeBalance mocks base method.
func (m *MockIWalletService) ChangeBalance(arg0 string, arg1 int) (model.ResponseModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeBalance", arg0, arg1)
	ret0, _ := ret[0].(model.ResponseModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ChangeBalance indicates an expected call of ChangeBalance.
func (mr *MockIWalletServiceMockRecorder) ChangeBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeBalance", reflect.TypeOf((*MockIWalletService)(nil).ChangeBalance), arg0, arg1)
}

// CreateWallet mocks base method.
func (m *MockIWalletService) CreateWallet(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWallet", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateWallet indicates an expected call of CreateWallet.
func (mr *MockIWalletServiceMockRecorder) CreateWallet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWallet", reflect.TypeOf((*MockIWalletService)(nil).CreateWallet), arg0)
}

// Get mocks base method.
func (m *MockIWalletService) Get(arg0 string) (model.ResponseModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(model.ResponseModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIWalletServiceMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIWalletService)(nil).Get), arg0)
}

// GetAll mocks base method.
func (m *MockIWalletService) GetAll() (*map[string]int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].(*map[string]int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockIWalletServiceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockIWalletService)(nil).GetAll))
}
